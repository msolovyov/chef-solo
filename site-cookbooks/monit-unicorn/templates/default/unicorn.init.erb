#!/bin/bash 
set -u
set -e
# Example init script, this can be used with nginx, too,
# since nginx and unicorn accept the same signals

# Feel free to change any of the following variables for your app:
APP_ROOT=<%= @node[:rails][:path] %>/current
PID_DIR=<%= @node[:rails][:path] %>/shared/pids/
RUNAS=<%= @node[:rails][:user] %>
PID=${PID_DIR}/unicorn.pid
ENV=production
command="cd $APP_ROOT && bundle exec unicorn -D -E $ENV -c config/unicorn.rb"

[ $(id -u) = 0 ] || { echo "$0 must be run as root"; exit 1;  }

old_pid="$PID.oldbin"

cd $APP_ROOT || exit 1

sig () {
	test -s "$PID" && kill -$1 `cat $PID`
}

oldsig () {
	test -s $old_pid && kill -$1 `cat $old_pid`
}

workersig () {
  workerpid="${PID_DIR}/unicorn.$2.pid"
  
  test -s "$workerpid" && kill -$1 `cat $workerpid`
}

case $1 in
start)
	sig 0 && echo >&2 "Already running" && exit 0
	su - $RUNAS -c "$command"
	;;
stop)
	sig QUIT && exit 0
	echo >&2 "Not running"
	;;
force-stop)
	sig TERM && exit 0
	echo >&2 "Not running"
	;;
restart|reload)
	sig HUP && echo reloaded OK && exit 0
	echo >&2 "Couldn't reload, starting $command instead"
	su - $RUNAS -c "$command"
	;;
upgrade)
	sig USR2 && exit 0
	echo >&2 "Couldn't upgrade, starting $command instead"
	su - $RUNAS -c "$command"
	;;
kill_worker)
	workersig QUIT $2 && exit 0
	echo >&2 "Worker not running"
	;;
rotate)
        sig USR1 && echo rotated logs OK && exit 0
        echo >&2 "Couldn't rotate logs" && exit 1
        ;;
*)
	echo >&2 "Usage: $0 <start|stop|restart|upgrade|rotate|force-stop>"
	exit 1
	;;
esac